@use '../../abstracts/variables' as v;
@use '../../base/mixins' as m;

.container--evolutions {
    background-image: url("data:image/svg+xml,<svg id='patternId' width='100%' height='100%' xmlns='http://www.w3.org/2000/svg'><defs><pattern id='a' patternUnits='userSpaceOnUse' width='20' height='80' patternTransform='scale(4) rotate(145)'><rect x='0' y='0' width='100%' height='100%' fill='hsla(0, 0%, 20%, 1)'/><path d='M0 10h20z'   stroke-width='6' stroke='hsla(259, 0%, 48%, 0.24)' fill='none'/><path d='M0 30h20z'   stroke-width='6' stroke='hsla(340, 1%, 31%, 0.25)' fill='none'/><path d='M0 50h20z'   stroke-width='6' stroke='hsla(199, 0%, 1%, 0.25)' fill='none'/><path d='M0 70h20z'   stroke-width='6' stroke='hsla(47, 0%, 9%, 0.24)' fill='none'/></pattern></defs><rect width='800%' height='800%' transform='translate(0,0)' fill='url(%23a)'/></svg>");
    margin: 1rem;
    border-radius: 5px;
    .evolution--cards {
        @include m.tablet {
            display: flex;
            justify-content: center;
            column-gap: 1rem;
            align-items: center;
        }
        padding: 0 1rem 2rem;
        .evl-card {
            display: flex;
            flex-direction: column;
            row-gap: 1rem;
            align-items: center;
            .poke-name {
                font-size: 1.2rem;
                color: #ffff;
            }
            .poke-number {
                color: gray;
            }
            img {
                max-width: 150px;
                border: solid 5px #ffff;
                border-radius: 50%;
                background-color: #3a393a;
                -webkit-box-shadow: -8px 9px 10px -6px rgba(0,0,0,0.75);
                -moz-box-shadow: -8px 9px 10px -6px rgba(0,0,0,0.75);
                box-shadow: -8px 9px 10px -6px rgba(0,0,0,0.75);
                transition: .2s;
            }
            @each $typename, $color in v.$colorTypes {
                .hover-#{$typename} {
                    &:hover {
                        border: 5px solid map-get($color, 'background') !important;
                    }
                }
            } 
            @each $typename, $color in v.$colorTypes {
                .type-#{$typename} {
                    background-color: map-get($color, 'background');
                    color: map-get($color, 'color');
                    padding: .2rem;
                    width: 80px;
                    font-size: .8rem;
                    border-radius: 5px;
                 }
            } 
            &:hover {
                cursor: pointer;
            }
        }
    }
}
.evol--types {
    display: flex;
    gap: .5rem;
}

.double--evolutions {
    .evolTwo--card {
        margin-bottom: 1rem;
    }
}

.multiple--evolutions {
    display: flex;
    column-gap: 2rem;
    padding-bottom: 2rem;
    .evl-card {
        img {
            max-width: 80px !important; 
        }
    }
}

.multiple--evolutionsEevee {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    row-gap: 3rem;
    column-gap: 1rem;
    padding-bottom: 2rem;
    .evl-card {
        img {
            max-width: 80px !important;
        }
    }
}

.title-section {
    text-align: left;
    color: #ffffff;
    padding: 1rem;
    font-weight: 500;
} 

@each $typename, $color in v.$colorTypes {
    .border-#{$typename} {
        border: 5px solid map-get($color, 'background') !important;
     }
} 

.cursor--disabled {
    pointer-events: none;
}